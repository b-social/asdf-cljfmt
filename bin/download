#!/usr/bin/env bash

set -euo pipefail

PLUGIN_DIR="$(dirname "${BASH_SOURCE[0]}")/.."
source "$PLUGIN_DIR/lib/helpers.sh"

get_platform() {
	uname | tr '[:upper:]' '[:lower:]'
	return
}

get_arch() {
	declare arch
	arch="$(uname -m)"
	if [ "$arch" == 'x86_64' ]; then
		echo 'amd64'
	elif [ "$arch" == 'arm64' ]; then
		echo 'aarch64'
	else
		error_exit 'Sadly, there are no official releases for your architecture'
	fi
	return
}

check_shasum() {
	local archive_file_name=$1
	local authentic_checksum_file=$2
	local authentic_checksum=""

	authentic_checksum=$(<"$authentic_checksum_file")

	if command -v sha256sum >/dev/null 2>&1; then
		sha256sum \
			-c <(echo "$authentic_checksum  $archive_file_name")
	elif command -v shasum >/dev/null 2>&1; then
		shasum \
			-a 256 \
			-c <(echo "$authentic_checksum  $archive_file_name")
	else
		fail "sha256sum or shasum is not available for use"
	fi
}

download() {
	local version=$1
	local download_path=$2
	local platform
	platform="$(get_platform)"
	local arch
	arch="$(get_arch)"
	download_url="https://github.com/weavejester/cljfmt/releases/download/${version}/cljfmt-${version}-${platform}-${arch}.tar.gz"

	http_code=$(curl -I -w '%{http_code}' -s -o /dev/null "$download_url")
	if [ "$http_code" -eq 404 ] || [ "$http_code" -eq 403 ]; then
		fail "URL: ${download_url} returned status ${http_code}"
	fi

	curl -L "$download_url" -o "${download_path}/cljfmt.tar.gz"

	if [ "unset" = "${ASDF_CLJ_KONDO_SKIP_CHECKSUM:-unset}" ]; then
		curl -L "${download_url}.sha256" -o "${download_path}/cljfmt.tar.gz.sha256"

		echo 'verifying checksum'
		if ! check_shasum "${download_path}/cljfmt.tar.gz" "${download_path}/cljfmt.tar.gz.sha256"; then
			fail "Authenticity of package archive can not be assured. Exiting."
		else
			msg "checksum verified"
		fi
	else
		err "checksum skipped"
	fi
}

download "$ASDF_INSTALL_VERSION" "$ASDF_DOWNLOAD_PATH"
